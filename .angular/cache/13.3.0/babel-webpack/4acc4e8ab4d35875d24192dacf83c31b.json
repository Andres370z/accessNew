{"ast":null,"code":"import _classCallCheck from \"/Users/apple/Documents/AccessControlSoft/accesscontrolsoft/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/AccessControlSoft/accesscontrolsoft/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { FullCalendarComponent } from '@fullcalendar/angular';\nimport esLocale from '@fullcalendar/core/locales/es';\nimport { CalendarOptions, EventClickArg } from '@fullcalendar/core'; // useful for typechecking\n\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { Router } from '@angular/router';\nimport { AlertService } from 'src/app/service/alert.service';\nimport { RoutersLink } from 'src/app/models/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/alert.service\";\nvar _c0 = [\"fullcalendar\"];\nexport var ClosingMinuteComponent = /*#__PURE__*/(function () {\n  var ClosingMinuteComponent = /*#__PURE__*/function () {\n    function ClosingMinuteComponent(router, alert) {\n      _classCallCheck(this, ClosingMinuteComponent);\n\n      this.router = router;\n      this.alert = alert;\n      this.eventList = [];\n      this.calendarVisible = false;\n      this.customerDetail = [];\n    }\n\n    _createClass(ClosingMinuteComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {}\n    }, {\n      key: \"getCalendar\",\n      value: function getCalendar() {\n        this.calendarOptions = {\n          locale: esLocale,\n          plugins: [dayGridPlugin, interactionPlugin],\n          headerToolbar: {\n            left: 'prev,next',\n            center: 'title',\n            right: 'dayGridMonth'\n          },\n          aspectRatio: 1.5,\n          views: {\n            dayGridMonth: {\n              buttonText: \"month\"\n            },\n            timeGridWeek: {\n              buttonText: \"week\"\n            },\n            timeGridDay: {\n              buttonText: \"day\"\n            }\n          },\n          initialView: 'dayGridMonth',\n          events: this.eventList,\n          weekends: true,\n          editable: true,\n          selectable: true,\n          selectMirror: true,\n          dayMaxEvents: true,\n          dateClick: this.handleDateClick.bind(this),\n          eventClick: this.handleEventClick.bind(this),\n          eventDragStop: this.handleEventDragStop.bind(this)\n          /* you can update a remote database when these fire:\n          eventAdd:\n          eventChange:\n          eventRemove:\n          */\n\n        };\n        this.calendarVisible = true;\n      }\n    }, {\n      key: \"handleDateClick\",\n      value: function handleDateClick(arg) {\n        console.log('dateclick');\n        console.log(arg);\n        console.log('dateclick');\n      }\n    }, {\n      key: \"handleEventClick\",\n      value: function handleEventClick(arg) {\n        console.log(arg.event._def);\n\n        if (arg.event._def.publicId != \"\") {\n          var token = this.convertTextEncrypt(arg.event._def.publicId);\n          this.router.navigate([RoutersLink.assistantDetail + token]);\n        }\n      }\n    }, {\n      key: \"handleEventDragStop\",\n      value: function handleEventDragStop(arg) {\n        console.log('DragStop');\n        console.log(arg);\n        console.log('DragStop');\n      } //method is used to encrypt and decrypt the text  \n\n    }, {\n      key: \"convertTextEncrypt\",\n      value: function convertTextEncrypt(text) {\n        return window.btoa(text); //return CryptoJS.AES.encrypt(text, Menssage.passwordAES).toString().replace('Por21Ld', '/');  \n      }\n    }]);\n\n    return ClosingMinuteComponent;\n  }();\n\n  ClosingMinuteComponent.ɵfac = function ClosingMinuteComponent_Factory(t) {\n    return new (t || ClosingMinuteComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AlertService));\n  };\n\n  ClosingMinuteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClosingMinuteComponent,\n    selectors: [[\"app-closing-minute\"]],\n    viewQuery: function ClosingMinuteComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fullcalendar = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 0,\n    template: function ClosingMinuteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"closing-minute works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  });\n  return ClosingMinuteComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}