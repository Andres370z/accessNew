{"ast":null,"code":"import _classCallCheck from \"/Users/apple/Documents/AccessControlSoft/accesscontrolsoft/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/AccessControlSoft/accesscontrolsoft/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { RoutersLink } from '../models/router';\nimport { HttpsService } from './https.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./https.service\";\nexport var VehicleDataService = /*#__PURE__*/(function () {\n  var VehicleDataService = /*#__PURE__*/function () {\n    function VehicleDataService(registeresquest) {\n      _classCallCheck(this, VehicleDataService);\n\n      this.registeresquest = registeresquest;\n      this.dataVehicleRegistered = [{\n        id: 0,\n        placa: '',\n        date: '',\n        model: '',\n        color: '',\n        owner: '',\n        office: '',\n        parkinglot: '',\n        dateEntered: '',\n        timeEntered: '',\n        dateExit: '',\n        timeExit: ''\n      }];\n    }\n\n    _createClass(VehicleDataService, [{\n      key: \"registeredVehicle\",\n      value: function registeredVehicle(inform) {\n        return this.registeresquest.POST(RoutersLink.registeredVehicle, inform);\n      }\n    }, {\n      key: \"integratedVehicle\",\n      value: function integratedVehicle(inform) {\n        return this.registeresquest.POST(RoutersLink.registeredVehicle, inform);\n      }\n    }, {\n      key: \"integratedVehicleUpdate\",\n      value: function integratedVehicleUpdate(id, inform) {\n        return this.registeresquest.PUT(RoutersLink.integratedVehicleUpdate + id, inform);\n      }\n    }, {\n      key: \"getregisteredVehicle\",\n      value: function getregisteredVehicle(id) {\n        return this.registeresquest.GET(RoutersLink.registeredVehicleGet + id);\n      }\n    }, {\n      key: \"getIntegratedVehicle\",\n      value: function getIntegratedVehicle(id) {\n        return this.registeresquest.GET(RoutersLink.getIntegratedVehicle + id);\n      }\n    }, {\n      key: \"getData\",\n      value: function getData() {\n        return this.dataVehicleRegistered.slice();\n      }\n    }]);\n\n    return VehicleDataService;\n  }();\n\n  VehicleDataService.ɵfac = function VehicleDataService_Factory(t) {\n    return new (t || VehicleDataService)(i0.ɵɵinject(i1.HttpsService));\n  };\n\n  VehicleDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: VehicleDataService,\n    factory: VehicleDataService.ɵfac,\n    providedIn: 'root'\n  });\n  return VehicleDataService;\n})();","map":null,"metadata":{},"sourceType":"module"}