{"ast":null,"code":"import _classCallCheck from \"/Users/andressaenz/Documents/project-one/accesscontrolsoft/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/andressaenz/Documents/project-one/accesscontrolsoft/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Menssage, RoutersLink } from '../models/router';\nimport { LocalstoreService } from '../service/localstore.service';\nimport { AuthService } from '../service/auth.service';\nimport { AlertService } from '../service/alert.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/localstore.service\";\nimport * as i3 from \"../service/auth.service\";\nimport * as i4 from \"../service/alert.service\";\nexport var AuthGuard = /*#__PURE__*/(function () {\n  var AuthGuard = /*#__PURE__*/function () {\n    function AuthGuard(router, localStore, _https, alert) {\n      _classCallCheck(this, AuthGuard);\n\n      this.router = router;\n      this.localStore = localStore;\n      this._https = _https;\n      this.alert = alert;\n      this.customerDetail = [];\n      this.usersData = this.localStore.getSuccessLogin();\n      this.customerDetail = this.localStore.getItem(Menssage.customerDetail);\n    }\n\n    _createClass(AuthGuard, [{\n      key: \"canActivate\",\n      value: function canActivate(route, state) {\n        var _this = this;\n\n        var token = this.localStore.getSuccessLogin();\n        console.log(token);\n\n        if (token === null) {\n          if (this.usersData.user.idrol == Menssage.idRolAdminClientsVigilant) {\n            var date = new Date();\n            var dateEnd = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n            var timeEnd = date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\n            var dataEnd = this.localStore.getItem(Menssage.acccess);\n            var data = {\n              dateExit: dateEnd,\n              timeExit: timeEnd\n            };\n            this.alert.loading();\n\n            this._https.accessPointRecordUpdate(dataEnd.id, data).then(function (resulta) {\n              _this.localStore.clear();\n\n              if (_this.usersData.user.idrol == Menssage.idRolAdmin) {\n                _this.router.navigate([RoutersLink.login]);\n              } else {\n                _this.router.navigate([RoutersLink.loginClients + _this.customerDetail.api_token]);\n              }\n            }).catch(function (err) {\n              _this.alert.error(Menssage.error, Menssage.server);\n            });\n          } else {\n            this.localStore.clear();\n\n            if (this.usersData.user.idrol == Menssage.idRolAdmin) {\n              this.router.navigate([RoutersLink.login]);\n            } else {\n              this.router.navigate([RoutersLink.loginClients + this.customerDetail.api_token]);\n            }\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n    }]);\n\n    return AuthGuard;\n  }();\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.LocalstoreService), i0.ɵɵinject(i3.AuthService), i0.ɵɵinject(i4.AlertService));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}