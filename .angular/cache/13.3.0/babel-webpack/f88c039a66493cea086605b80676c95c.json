{"ast":null,"code":"import _classCallCheck from \"/Users/apple/Documents/AccessControlSoft/accesscontrolsoft/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/AccessControlSoft/accesscontrolsoft/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Menssage } from 'src/app/models/router';\nimport { AlertService } from 'src/app/service/alert.service';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { LocalstoreService } from 'src/app/service/localstore.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/localstore.service\";\nimport * as i2 from \"src/app/service/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"src/app/service/alert.service\";\nimport * as i6 from \"@angular/common\";\n\nfunction LogBooksComponent_full_calendar_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"full-calendar\", 11, 12);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(\"--background-color: \" + ctx_r0.customerDetail.color + \";\");\n    i0.ɵɵproperty(\"options\", ctx_r0.calendarOptions);\n  }\n}\n\nexport var LogBooksComponent = /*#__PURE__*/(function () {\n  var LogBooksComponent = /*#__PURE__*/function () {\n    function LogBooksComponent(localStore, _https, router, formBuilder, alert) {\n      _classCallCheck(this, LogBooksComponent);\n\n      this.localStore = localStore;\n      this._https = _https;\n      this.router = router;\n      this.formBuilder = formBuilder;\n      this.alert = alert;\n      this.eventList = [];\n      this.calendarVisible = false;\n      this.eventsData = [];\n      this.customerDetail = [];\n      this.images = [];\n      this.eventItems = [];\n      this.needRefresh = false;\n      this.displayedColumns = ['id', 'name', 'direction', 'telephone', 'identification', 'email', 'type', 'accion'];\n      this.usersData = this.localStore.getSuccessLogin();\n      this.customerDetail = this.localStore.getItem(Menssage.customerDetail);\n      this.getEvents(this.usersData.user.idProyectsClients); //this.getEventImg(this.usersData.user.idProyectsClients, '')\n    }\n\n    _createClass(LogBooksComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.initial();\n      }\n    }, {\n      key: \"initial\",\n      value: function initial() {\n        /* if (localStorage.getItem('token') !== null) {\n          this.router.navigate([RoutersLink.home]);\n        } */\n        this.form = this.formBuilder.group({\n          nameProjectsClients: [Menssage.empty, Validators.compose([Validators.required])],\n          addressProjectsClients: [Menssage.empty, Validators.compose([Validators.required])],\n          telephoneProjectsClients: [Menssage.empty, Validators.compose([Validators.required])],\n          identificationCardProjectsClients: [Menssage.empty, Validators.compose([Validators.required])],\n          emailProjectsClients: [Menssage.empty, Validators.compose([Validators.required, Validators.pattern(Menssage.valiEmail), Validators.minLength(5)])],\n          idUsers: [this.usersData.user.id, Validators.compose([Validators.required])]\n        });\n      }\n    }, {\n      key: \"applyFilter\",\n      value: function applyFilter(event) {\n        var filterValue = event.target.value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n          this.dataSource.paginator.firstPage();\n        }\n      }\n    }, {\n      key: \"getEvents\",\n      value: function getEvents(item) {\n        var _this = this;\n\n        this.alert.loading();\n\n        this._https.getEvent(item).then(function (resulta) {\n          console.log(resulta);\n          _this.eventItems = resulta;\n\n          _this.alert.messagefin();\n\n          _this.eventsData = [];\n          resulta.forEach(function (element) {\n            _this.eventsData.push({\n              id: element.id,\n              name: element.nameProjectsClients,\n              direction: element.addressProjectsClients,\n              telephone: element.telephoneProjectsClients,\n              identification: element.identificationCardProjectsClients,\n              email: element.emailProjectsClients,\n              idProyectsClients: element.id,\n              type: element.userMaster\n            });\n          });\n          _this.dataSource = new MatTableDataSource(_this.eventsData);\n          _this.dataSource.paginator = _this.paginator;\n          _this.dataSource.sort = _this.sort;\n          console.log(_this.eventsData);\n        }).catch(function (err) {\n          console.log(err.error);\n\n          if (err.error.message != undefined) {\n            _this._https.logout();\n          }\n\n          _this.alert.error(Menssage.error, Menssage.server);\n        });\n      }\n    }, {\n      key: \"valid\",\n      value: function valid(item) {\n        var valid = true;\n\n        if (item.zode === Menssage.empty) {\n          this.alert.error(Menssage.error, Menssage.zode);\n          valid = false;\n        }\n\n        if (item.daneMunicipality === Menssage.empty) {\n          this.alert.error(Menssage.error, Menssage.daneMunicipality);\n          valid = false;\n        }\n\n        if (item.municipality === Menssage.empty) {\n          this.alert.error(Menssage.error, Menssage.municipality);\n          valid = false;\n        }\n\n        if (item.daneInstitutions === Menssage.empty) {\n          this.alert.error(Menssage.error, Menssage.daneInstitutions);\n          valid = false;\n        }\n\n        if (item.institutions === Menssage.empty) {\n          this.alert.error(Menssage.error, Menssage.institutions);\n          valid = false;\n        }\n\n        if (item.direction === Menssage.empty) {\n          this.alert.error(Menssage.error, Menssage.direction);\n          valid = false;\n        }\n\n        if (item.rector === Menssage.empty) {\n          this.alert.error(Menssage.error, Menssage.rector);\n          valid = false;\n        }\n\n        if (item.telephone === Menssage.empty) {\n          this.alert.error(Menssage.error, Menssage.telephone);\n          valid = false;\n        }\n\n        if (item.email === Menssage.empty) {\n          this.alert.error(Menssage.error, Menssage.email);\n          valid = false;\n        }\n\n        if (item.idusers === Menssage.empty) {\n          this.alert.error(Menssage.error, Menssage.idusers);\n          valid = false;\n        }\n\n        if (item.idProyectsClients === Menssage.empty) {\n          this.alert.error(Menssage.error, Menssage.idProyectsClients);\n          valid = false;\n        }\n\n        return valid;\n      }\n    }, {\n      key: \"getEventImg\",\n      value: function getEventImg(item, itenEvents) {\n        var _this2 = this;\n\n        this._https.getEventImg(item, itenEvents).then(function (resulta) {\n          console.log(resulta);\n          var count = 1;\n          _this2.eventsData = [];\n          resulta.forEach(function (element) {\n            _this2.eventsData.push({\n              id: count++,\n              idEvents: element.id,\n              nameEvent: element.nameEvent,\n              companyNameEvent: element.companyNameEvent,\n              nitEvent: element.nitEvent,\n              dateEvent: element.dateEvent,\n              imgEvent: element.imgEvent\n            });\n          });\n          _this2.dataSource = new MatTableDataSource(_this2.eventsData);\n          _this2.dataSource.paginator = _this2.paginator;\n          _this2.dataSource.sort = _this2.sort;\n        }).catch(function (err) {\n          console.log(err);\n\n          _this2.alert.error(Menssage.error, Menssage.server);\n        });\n      }\n    }, {\n      key: \"getFileDetails\",\n      value: function getFileDetails(event) {\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.readAsDataURL(file);\n\n        reader.onload = function () {\n          file.dataURL = reader.result;\n        };\n\n        this.form.controls['imgInstitutions'].setValue(file);\n      }\n    }, {\n      key: \"deleteList\",\n      value: function deleteList(id) {\n        var _this3 = this;\n\n        Swal.fire({\n          title: 'Estas seguro de suspender este cliente',\n          icon: 'info',\n          showDenyButton: true,\n          showCancelButton: false,\n          confirmButtonText: 'Si',\n          denyButtonText: 'No',\n          customClass: {\n            actions: 'my-actions',\n            cancelButton: 'order-1 right-gap',\n            confirmButton: 'order-2',\n            denyButton: 'order-3'\n          }\n        }).then(function (result) {\n          if (result.isConfirmed) {\n            _this3.deleteFull(id);\n          } else if (result.isDenied) {\n            _this3.alert.error(Menssage.error, \"Cancelo la suspención del cliente\");\n          }\n        });\n      }\n    }, {\n      key: \"deleteFull\",\n      value: function deleteFull(id) {\n        var _this4 = this;\n\n        this.alert.loading();\n\n        this._https.updateUsersClient(id).then(function (resulta) {\n          _this4.alert.success(Menssage.exito, Menssage.successDelete);\n\n          _this4.getEvents(_this4.usersData.user.idProyectsClients);\n        }).catch(function (err) {\n          console.log(err);\n\n          _this4.alert.error(Menssage.error, Menssage.server);\n        });\n      }\n    }, {\n      key: \"resgisterImageEvents\",\n      value: function resgisterImageEvents() {\n        var _this5 = this;\n\n        if (this.images.length != 0) {\n          this.alert.loading();\n          var data = {\n            img: this.images,\n            idEvent: this.selectItems,\n            idUsers: this.usersData.user.id,\n            idProyectsClients: this.usersData.user.idProyectsClients\n          };\n\n          this._https.resgisterImageEvents(data).then(function (resulta) {\n            _this5.alert.success(Menssage.exito, Menssage.successDelete);\n\n            _this5.getEventImg(_this5.usersData.user.idProyectsClients, '');\n\n            _this5.images = [];\n          }).catch(function (err) {\n            console.log(err.error);\n\n            if (err.error.message != undefined) {\n              _this5._https.logout();\n            }\n\n            _this5.alert.error(Menssage.error, Menssage.server);\n          });\n        } else {\n          this.alert.error(Menssage.error, Menssage.idImg);\n        }\n      }\n    }, {\n      key: \"onSubmit\",\n      value: function onSubmit(item) {\n        var _this6 = this;\n\n        console.log(item);\n\n        if (this.valid(item)) {\n          this.alert.loading();\n\n          this._https.createInstitution(item).then(function (resulta) {\n            _this6.cleanReset();\n          }).catch(function (err) {\n            console.log(err);\n\n            if (err.error.message != undefined) {\n              _this6._https.logout();\n            }\n\n            _this6.alert.error(Menssage.error, Menssage.server);\n          });\n        }\n      }\n    }, {\n      key: \"cleanReset\",\n      value: function cleanReset() {\n        this.form.reset();\n        this.form.controls['idusers'].setValue(this.usersData.user.id);\n        this.getEvents(this.usersData.user.idProyectsClients);\n      }\n    }, {\n      key: \"routeList\",\n      value: function routeList(id) {\n        var code = btoa(id);\n        this.router.navigate(['/home/createClients/listUsers/' + code]);\n      }\n    }]);\n\n    return LogBooksComponent;\n  }();\n\n  LogBooksComponent.ɵfac = function LogBooksComponent_Factory(t) {\n    return new (t || LogBooksComponent)(i0.ɵɵdirectiveInject(i1.LocalstoreService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.AlertService));\n  };\n\n  LogBooksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LogBooksComponent,\n    selectors: [[\"app-log-books\"]],\n    viewQuery: function LogBooksComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n        i0.ɵɵviewQuery(MatSort, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    decls: 13,\n    vars: 3,\n    consts: [[1, \"main-content\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-header\", \"card-header-icon\", \"card-header-rose\"], [1, \"card-icon\"], [1, \"material-icons\"], [1, \"card-title\"], [1, \"card-body\"], [3, \"options\", \"style\", 4, \"ngIf\"], [3, \"options\"], [\"fullcalendar\", \"\"]],\n    template: function LogBooksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"i\", 7);\n        i0.ɵɵtext(8, \"grid_on\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"h4\", 8);\n        i0.ɵɵtext(10, \"Listado eventos\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 9);\n        i0.ɵɵtemplate(12, LogBooksComponent_full_calendar_12_Template, 2, 3, \"full-calendar\", 10);\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵstyleMap(\"--background-color: \" + ctx.customerDetail.color + \";\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.calendarVisible);\n      }\n    },\n    directives: [i6.NgIf],\n    styles: [\"\"]\n  });\n  return LogBooksComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}