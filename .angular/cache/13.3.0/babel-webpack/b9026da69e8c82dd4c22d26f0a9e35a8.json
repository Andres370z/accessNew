{"ast":null,"code":"import _classCallCheck from \"/Users/apple/Documents/AccessControlSoft/accesscontrolsoft/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/AccessControlSoft/accesscontrolsoft/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { Component, ElementRef, Inject, PLATFORM_ID, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Menssage } from 'src/app/models/router';\nimport { AlertService } from 'src/app/service/alert.service';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { LocalstoreService } from 'src/app/service/localstore.service';\nimport { SystemTablesService } from 'src/app/service/system-tables.service';\nimport { VigilantFormService } from 'src/app/service/vigilant-form.service';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subject } from 'rxjs';\nimport { WebcamUtil } from 'ngx-webcam';\n\nvar VigilantFormComponent =\n/*#__PURE__*/\n//HASTA AQUI\nfunction () {\n  function VigilantFormComponent(myFormsBilder, userService, snack, localStore, alert, _https, systemTablesService, _platform) {\n    _classCallCheck(this, VigilantFormComponent);\n\n    this.myFormsBilder = myFormsBilder;\n    this.userService = userService;\n    this.snack = snack;\n    this.localStore = localStore;\n    this.alert = alert;\n    this._https = _https;\n    this.systemTablesService = systemTablesService;\n    this._platform = _platform;\n    this.displayedColumns = ['name', 'lastName', 'id', 'destination', 'marca', 'date', 'portatil', 'Acciones'];\n    this.portatil = ['Si', 'No'];\n    this.customerDetail = [];\n    this.listOffice = [];\n    this.eventsData = [];\n    this.trigger = new Subject(); // toggle webcam on/off\n\n    this.showWebcam = true;\n    this.allowCameraSwitch = true;\n    this.multipleWebcamsAvailable = false;\n    this.videoOptions = {// width: {ideal: 1024},\n      // height: {ideal: 576}\n    };\n    this.errors = []; // switch to next / previous / specific webcam; true/false: forward/backwards, string: deviceId\n\n    this.nextWebcam = new Subject();\n    this.sysImage = '';\n    this.listUser = [];\n    this.response = false;\n    this.responseTwo = false;\n    this.responseThree = false;\n    this.customerDetail = this.localStore.getItem(Menssage.customerDetail);\n    this.usersData = this.localStore.getSuccessLogin();\n    this.getOffice(this.usersData.user.idProyectsClients);\n    this.getEvents(this.usersData.user.idProyectsClients);\n  }\n\n  _createClass(VigilantFormComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      this.initial();\n      WebcamUtil.getAvailableVideoInputs().then(function (mediaDevices) {\n        _this.multipleWebcamsAvailable = mediaDevices && mediaDevices.length > 1;\n      });\n    }\n  }, {\n    key: \"getSnapshot\",\n    value: function getSnapshot() {\n      this.trigger.next(void 0);\n    }\n  }, {\n    key: \"initial\",\n    value: function initial() {\n      var date = new Date();\n      var dateEnd = date.getFullYear + '-' + date.getMonth + '-' + date.getDate;\n      var timeEnd = date.getHours + ':' + date.getMinutes + ':' + date.getSeconds;\n      this.form = this.myFormsBilder.group({\n        nameOne: [Menssage.empty, Validators.compose([Validators.required])],\n        lastname: [Menssage.empty, Validators.compose([Validators.required])],\n        identificationCard: [Menssage.empty, Validators.compose([Validators.required])],\n        dateEntered: [dateEnd, Validators.compose([Validators.required])],\n        timeEntered: [timeEnd, Validators.compose([Validators.required])],\n        idOffices: [Menssage.empty, Validators.compose([Validators.required])],\n        marcaSerialEntered: [Menssage.empty, Validators.compose([Validators.nullValidator])],\n        laptopEntered: [Menssage.empty, Validators.compose([Validators.required])],\n        imgMenu: [Menssage.empty],\n        idusers: [this.usersData.user.id, Validators.compose([Validators.required])],\n        idProyectsClients: [this.usersData.user.idProyectsClients, Validators.compose([Validators.required])]\n      });\n      this.formExit = this.myFormsBilder.group({\n        laptopExit: [Menssage.empty, Validators.compose([Validators.required])],\n        marcaSerialExit: [Menssage.empty, Validators.compose([Validators.required])],\n        dateTimeExit: [Menssage.empty, Validators.compose([Validators.required])],\n        idclientUsers: [Menssage.empty, Validators.compose([Validators.required])],\n        idusers: [this.usersData.user.id, Validators.compose([Validators.required])],\n        idProyectsClients: [this.usersData.user.idProyectsClients, Validators.compose([Validators.required])]\n      });\n      this.loadUser();\n    }\n  }, {\n    key: \"getOffice\",\n    value: function getOffice(item) {\n      var _this2 = this;\n\n      this.systemTablesService.getOffice(item).then(function (resulta) {\n        _this2.listOffice = resulta;\n      }).catch(function (err) {\n        console.log(err.error);\n\n        if (err.error.message != undefined) {\n          _this2._https.logout();\n        }\n\n        _this2.alert.error(Menssage.error, Menssage.server);\n      });\n    }\n  }, {\n    key: \"getEvents\",\n    value: function getEvents(item) {\n      var _this3 = this;\n\n      this.alert.loading();\n      this.userService.getPedestrianEntrance(item).then(function (resulta) {\n        _this3.alert.messagefin();\n\n        _this3.eventsData = [];\n        resulta.forEach(function (element) {\n          _this3.eventsData.push({\n            id: element.id,\n            nameOne: element.nameOne,\n            lastname: element.lastname,\n            identificationCard: element.identificationCard,\n            dateTimeEntered: element.dateTimeEntered,\n            destination: element.destination,\n            marcaSerialEntered: element.marcaSerialEntered,\n            laptopEntered: element.laptopEntered\n          });\n        });\n        _this3.dataSource = new MatTableDataSource(_this3.eventsData);\n        _this3.dataSource.paginator = _this3.paginator;\n        _this3.dataSource.sort = _this3.sort;\n        console.log(_this3.eventsData);\n      }).catch(function (err) {\n        console.log(err.error);\n\n        if (err.error.message != undefined) {\n          _this3._https.logout();\n        }\n\n        _this3.alert.error(Menssage.error, Menssage.server);\n      });\n    }\n  }, {\n    key: \"valid\",\n    value: function valid(item) {\n      var valid = true;\n\n      if (item.nameOne === Menssage.empty) {\n        this.alert.error(Menssage.error, Menssage.name);\n        valid = false;\n      }\n\n      if (item.lastname === Menssage.empty) {\n        this.alert.error(Menssage.error, Menssage.surname);\n        valid = false;\n      }\n\n      if (item.identificationCard === Menssage.empty) {\n        this.alert.error(Menssage.error, Menssage.telephone);\n        valid = false;\n      }\n\n      if (item.dateTimeEntered === Menssage.empty) {\n        this.alert.error(Menssage.error, Menssage.identificationCard);\n        valid = false;\n      }\n\n      if (item.idOffices === Menssage.empty) {\n        this.alert.error(Menssage.error, Menssage.password);\n        valid = false;\n      }\n\n      if (item.marcaSerialEntered === Menssage.empty) {\n        this.alert.error(Menssage.error, Menssage.passwordVerifi);\n        valid = false;\n      }\n\n      if (item.laptopEntered === Menssage.empty) {\n        this.alert.error(Menssage.error, Menssage.idrol);\n        valid = false;\n      }\n\n      if (item.idusers === Menssage.empty) {\n        this.alert.error(Menssage.error, Menssage.idusers);\n        valid = false;\n      }\n\n      if (item.idProyectsClients === Menssage.empty) {\n        this.alert.error(Menssage.error, Menssage.idProyectsClients);\n        valid = false;\n      }\n\n      return valid;\n    }\n  }, {\n    key: \"saveData\",\n    value: function saveData(item) {\n      var _this4 = this;\n\n      if (this.valid(item)) {\n        this.alert.loading();\n        this.userService.clientUsers(item).then(function (resulta) {\n          var date = new Date();\n          var dateEnd = date.getFullYear + '-' + date.getMonth + '-' + date.getDate;\n          var timeEnd = date.getHours + ':' + date.getMinutes + ':' + date.getSeconds;\n          var data = {\n            laptopEntered: item.laptopEntered,\n            marcaSerialEntered: item.marcaSerialEntered,\n            dateEntered: dateEnd,\n            timeEntered: timeEnd,\n            idclientUsers: resulta.id,\n            idusers: item.idusers,\n            idProyectsClients: item.idProyectsClients\n          };\n\n          _this4.saveDataExitEntrance(data);\n        }).catch(function (err) {\n          console.log(err);\n\n          if (err.error.message != undefined) {\n            _this4._https.logout();\n          }\n\n          _this4.alert.error(Menssage.error, Menssage.server);\n        });\n      }\n    }\n  }, {\n    key: \"saveDataExitEntrance\",\n    value: function saveDataExitEntrance(item) {\n      var _this5 = this;\n\n      this.userService.pedestrianEntrance(item).then(function (resulta) {\n        _this5.cleanResetExit();\n\n        _this5.alert.messagefin();\n      }).catch(function (err) {\n        console.log(err);\n\n        if (err.error.message != undefined) {\n          _this5._https.logout();\n        }\n\n        _this5.alert.error(Menssage.error, Menssage.server);\n      });\n    }\n  }, {\n    key: \"saveDataExit\",\n    value: function saveDataExit(item) {\n      var _this6 = this;\n\n      var date = new Date();\n      var dateEnd = date.getFullYear + '-' + date.getMonth + '-' + date.getDate;\n      var timeEnd = date.getHours + ':' + date.getMinutes + ':' + date.getSeconds;\n      var data = {\n        laptopExit: item.laptopExit,\n        marcaSerialExit: item.marcaSerialExit,\n        dateExit: dateEnd,\n        timeExit: timeEnd\n      };\n      this.alert.loading();\n      this.userService.pedestrianEntrance(data).then(function (resulta) {\n        _this6.cleanResetExit();\n\n        _this6.alert.messagefin();\n      }).catch(function (err) {\n        console.log(err);\n\n        if (err.error.message != undefined) {\n          _this6._https.logout();\n        }\n\n        _this6.alert.error(Menssage.error, Menssage.server);\n      });\n    }\n  }, {\n    key: \"cleanReset\",\n    value: function cleanReset() {\n      this.form.reset();\n      this.form.controls['idusers'].setValue(this.usersData.user.id);\n      this.form.controls['idProyectsClients'].setValue(this.usersData.user.idProyectsClients);\n      this.getEvents(this.usersData.user.idProyectsClients);\n    }\n  }, {\n    key: \"cleanResetExit\",\n    value: function cleanResetExit() {\n      this.formExit.reset();\n      this.formExit.controls['idusers'].setValue(this.usersData.user.id);\n      this.formExit.controls['idProyectsClients'].setValue(this.usersData.user.idProyectsClients);\n      this.getEvents(this.usersData.user.idProyectsClients);\n    }\n  }, {\n    key: \"applyFilter\",\n    value: function applyFilter(event) {\n      var filterValue = event.target.value;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n\n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  }, {\n    key: \"updateData\",\n    value: function updateData() {\n      console.log(this.formExit);\n      var save = {\n        // position: 0, \n        name: this.form.value.nameOne,\n        id: this.form.value.id,\n        lastName: this.form.value.lastname,\n        destination: this.form.value.destination,\n        date: this.form.value.date,\n        portatil: this.form.value.portatil,\n        marca: this.form.value.marca\n      };\n      console.log(save);\n      this.userService.addUser(save); //muestra un mensaje de exito\n\n      this.snack.open('El peaton fue registrado', 'operación exitosa', {\n        duration: 1500,\n        horizontalPosition: 'center',\n        verticalPosition: 'bottom'\n      });\n    }\n  }, {\n    key: \"loadUser\",\n    value: function loadUser() {\n      this.listUser = this.userService.getUsers();\n      this.dataSource = new MatTableDataSource(this.listUser);\n      this.dataSource.sort = this.sort;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.form.reset();\n      this.snack.open('Ingresa un nuevo peaton', 'operación exitosa', {\n        duration: 1500,\n        horizontalPosition: 'center',\n        verticalPosition: 'bottom'\n      });\n    }\n  }, {\n    key: \"routeList\",\n    value: function routeList(item) {\n      this.responseTwo = true;\n      this.formExit.controls['idclientUsers'].setValue(item);\n    }\n  }, {\n    key: \"getFileDetails\",\n    value: function getFileDetails(event) {\n      var file = event.target.files[0];\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = function () {\n        file.dataURL = reader.result;\n      };\n\n      this.form.controls['imgMenu'].setValue(file);\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart() {\n      var _this7 = this;\n\n      if (isPlatformBrowser(this._platform) && 'mediaDevices' in navigator) {\n        navigator.mediaDevices.getUserMedia({\n          video: true\n        }).then(function (ms) {\n          var _video = _this7.video.nativeElement;\n          _video.srcObject = ms;\n\n          _video.play();\n        });\n      }\n    }\n  }, {\n    key: \"onStop\",\n    value: function onStop() {\n      this.video.nativeElement.pause();\n      this.video.nativeElement.srcObject.getVideoTracks()[0].stop();\n      console.log(this.video.nativeElement.srcObject);\n      this.video.nativeElement.srcObject = null;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.video.nativeElement.srcObject.getVideoTracks()[0].stop();\n    }\n  }, {\n    key: \"captureImg\",\n    value: function captureImg(webcamImage) {\n      this.webcamImage = webcamImage;\n      this.sysImage = webcamImage.imageAsDataUrl;\n      console.info('got webcam image', this.sysImage);\n    }\n  }, {\n    key: \"invokeObservable\",\n    get: function get() {\n      return this.trigger.asObservable();\n    }\n  }, {\n    key: \"toggleWebcam\",\n    value: function toggleWebcam() {\n      this.showWebcam = !this.showWebcam;\n    }\n  }, {\n    key: \"handleInitError\",\n    value: function handleInitError(error) {\n      this.errors.push(error);\n    }\n  }, {\n    key: \"showNextWebcam\",\n    value: function showNextWebcam(directionOrDeviceId) {\n      // true => move forward through devices\n      // false => move backwards through devices\n      // string => move to device with given deviceId\n      this.nextWebcam.next(directionOrDeviceId);\n    }\n  }, {\n    key: \"handleImage\",\n    value: function handleImage(webcamImage) {\n      this.webcamImage = webcamImage;\n      this.sysImage = webcamImage.imageAsDataUrl;\n      console.info('got webcam image', this.sysImage);\n      console.info('received webcam image', webcamImage);\n    }\n  }, {\n    key: \"cameraWasSwitched\",\n    value: function cameraWasSwitched(deviceId) {\n      console.log('active device: ' + deviceId);\n      this.deviceId = deviceId;\n    }\n  }, {\n    key: \"triggerObservable\",\n    get: function get() {\n      return this.trigger.asObservable();\n    }\n  }, {\n    key: \"nextWebcamObservable\",\n    get: function get() {\n      return this.nextWebcam.asObservable();\n    }\n  }]);\n\n  return VigilantFormComponent;\n}();\n\n__decorate([ViewChild(MatSort), __metadata(\"design:type\", MatSort)], VigilantFormComponent.prototype, \"sort\", void 0);\n\n__decorate([ViewChild(MatPaginator), __metadata(\"design:type\", MatPaginator)], VigilantFormComponent.prototype, \"paginator\", void 0);\n\n__decorate([ViewChild('image', {\n  static: true\n}), __metadata(\"design:type\", ElementRef)], VigilantFormComponent.prototype, \"video\", void 0);\n\nVigilantFormComponent = __decorate([Component({\n  selector: 'app-vigilant-form',\n  templateUrl: './vigilant-form.component.html',\n  styleUrls: ['./vigilant-form.component.css']\n}) //HASTA AQUI\n, __param(7, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [FormBuilder, VigilantFormService, MatSnackBar, LocalstoreService, AlertService, AuthService, SystemTablesService, Object])], VigilantFormComponent);\nexport { VigilantFormComponent };","map":null,"metadata":{},"sourceType":"module"}