{"ast":null,"code":"import _classCallCheck from \"/Users/andressaenz/Documents/project-one/accesscontrolsoft/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/andressaenz/Documents/project-one/accesscontrolsoft/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport * as i0 from \"@angular/core\";\nexport var ExcelService = /*#__PURE__*/(function () {\n  var ExcelService = /*#__PURE__*/function () {\n    function ExcelService() {\n      _classCallCheck(this, ExcelService);\n\n      this.excelType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    }\n\n    _createClass(ExcelService, [{\n      key: \"exportAsExcelFile\",\n      value: function exportAsExcelFile(item, name) {\n        console.log(item);\n        var worksheet = XLSX.utils.json_to_sheet(item);\n        console.log('worksheet', worksheet);\n        var workbook = {\n          Sheets: {\n            data: worksheet\n          },\n          SheetNames: ['data']\n        };\n        var excelBuffer = XLSX.write(workbook, {\n          bookType: 'xlsx',\n          type: 'array'\n        }); //const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'buffer' });\n\n        this.saveAsExcelFile(excelBuffer, name);\n      }\n    }, {\n      key: \"saveAsExcelFile\",\n      value: function saveAsExcelFile(buffer, fileName) {\n        var data = new Blob([buffer], {\n          type: this.excelType\n        });\n        saveAs(data, fileName + '_export_' + new Date().getTime() + '.xlsx');\n      }\n    }]);\n\n    return ExcelService;\n  }();\n\n  ExcelService.ɵfac = function ExcelService_Factory(t) {\n    return new (t || ExcelService)();\n  };\n\n  ExcelService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ExcelService,\n    factory: ExcelService.ɵfac,\n    providedIn: 'root'\n  });\n  return ExcelService;\n})();","map":null,"metadata":{},"sourceType":"module"}