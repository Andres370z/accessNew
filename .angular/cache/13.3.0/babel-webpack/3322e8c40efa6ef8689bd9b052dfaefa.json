{"ast":null,"code":"import _classCallCheck from \"/Users/andressaenz/Documents/Andres Rangel/Proyectos Angular/access/accesscontrolsoft/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/andressaenz/Documents/Andres Rangel/Proyectos Angular/access/accesscontrolsoft/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { ElementRef } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Menssage } from 'src/app/models/router';\nimport { AlertService } from 'src/app/service/alert.service';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { LocalstoreService } from 'src/app/service/localstore.service';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/service/auth.service\";\nimport * as i4 from \"src/app/service/alert.service\";\nimport * as i5 from \"src/app/service/localstore.service\";\nexport var TwoStepVerificationComponent = /*#__PURE__*/(function () {\n  var TwoStepVerificationComponent = /*#__PURE__*/function () {\n    function TwoStepVerificationComponent(element, activatedRoute, router, formBuilder, _https, alert, localStore) {\n      _classCallCheck(this, TwoStepVerificationComponent);\n\n      this.element = element;\n      this.activatedRoute = activatedRoute;\n      this.router = router;\n      this.formBuilder = formBuilder;\n      this._https = _https;\n      this.alert = alert;\n      this.localStore = localStore;\n      this.test = new Date();\n      this.login = false;\n      this.loginVisible = true;\n      this.customerDetail = [];\n      this.api = environment.img;\n      this.nativeElement = element.nativeElement;\n      this.sidebarVisible = false;\n      this.textAlert = Menssage;\n      var token = \"ErLCUZBtopFI7hfx4ShACW8OROgHhL2h6eh4RVKQas02QaMn5w\";\n      this.getCustomerDetail(token);\n      var reload = this.localStore.getItem(\"reload\");\n\n      if (reload != \"reload\") {\n        this.localStore.setItem(\"reload\", \"reload\");\n        window.location.reload();\n      }\n    }\n\n    _createClass(TwoStepVerificationComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        //this.alert.loading();\n        //particlesJS.load('particles-js', '../assets/particle.json', null);\n        var navbar = this.element.nativeElement;\n        this.toggleButton = navbar.getElementsByClassName('navbar-toggler')[0] ? navbar.getElementsByClassName('navbar-toggler')[0] : 0;\n        var body = document.getElementsByTagName('body')[0];\n        body.classList.add('login-page');\n        body.classList.add('off-canvas-sidebar');\n        var card = document.getElementsByClassName('card')[0];\n        setTimeout(function () {\n          // after 1000 ms we add the class animated to the login/register card\n          card.classList.remove('card-hidden');\n        }, 700);\n        this.initial();\n      }\n    }, {\n      key: \"initial\",\n      value: function initial() {\n        /* if (localStorage.getItem('token') !== null) {\n          this.router.navigate([RoutersLink.home]);\n        } */\n        this.form = this.formBuilder.group({\n          email: [\"admin@electrocnis.com\", Validators.compose([Validators.required, Validators.pattern(Menssage.valiEmail), Validators.minLength(5)])],\n          password: [\"Electrocnis*\", Validators.compose([Validators.required, Validators.minLength(6)])]\n        });\n      }\n    }, {\n      key: \"sidebarToggle\",\n      value: function sidebarToggle() {\n        if (this.toggleButton != null || this.toggleButton != undefined) {\n          var toggleButton = this.toggleButton;\n          var body = document.getElementsByTagName('body')[0];\n          var sidebar = document.getElementsByClassName('navbar-collapse')[0];\n\n          if (this.sidebarVisible == false) {\n            setTimeout(function () {\n              toggleButton.classList.add('toggled');\n            }, 500);\n            body.classList.add('nav-open');\n            this.sidebarVisible = true;\n          } else {\n            if (this.toggleButton != undefined) {\n              console.log(\"ojo\");\n              this.toggleButton.classList.remove('toggled');\n            }\n\n            this.sidebarVisible = false;\n            body.classList.remove('nav-open');\n          }\n        }\n      }\n    }, {\n      key: \"getCustomerDetail\",\n      value: function getCustomerDetail(item) {\n        var _this = this;\n\n        this.alert.loading();\n\n        this._https.getCustomerDetail(item).then(function (resulta) {\n          console.log(resulta);\n          _this.customerDetail = resulta;\n\n          _this.localStore.removeEnd(\"reload\");\n\n          _this.localStore.setItem(resulta, Menssage.customerDetail);\n\n          _this.alert.messagefin();\n        }).catch(function (err) {\n          console.log(err);\n\n          _this.alert.error(Menssage.error, Menssage.server);\n        });\n      }\n    }, {\n      key: \"onSubmit\",\n      value: function onSubmit(item) {\n        var _this2 = this;\n\n        if (this.valid(item)) {\n          this.alert.loading();\n\n          if (this.login === false) {\n            this._https.login(item).then(function (resulta) {\n              if (resulta) {\n                console.log(resulta);\n\n                _this2.localStore.setSuccessLogin(resulta);\n\n                _this2.router.navigateByUrl('pages/verification');\n\n                _this2.alert.success(Menssage.exito, Menssage.success); //this.alert.messagefin();\n\n\n                _this2.form.reset();\n              } else {\n                _this2.alert.error(Menssage.error, Menssage.server);\n              }\n            }).catch(function (err) {\n              console.log(err);\n\n              _this2.alert.error(Menssage.error, Menssage.server);\n            });\n          }\n        }\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        var body = document.getElementsByTagName('body')[0];\n        body.classList.remove('login-page');\n        body.classList.remove('off-canvas-sidebar');\n      }\n    }, {\n      key: \"valid\",\n      value: function valid(item) {\n        var valid = true;\n\n        if (item.email === Menssage.empty) {\n          this.alert.error(Menssage.error, Menssage.email);\n          valid = false;\n        }\n\n        if (item.password === Menssage.empty) {\n          this.alert.error(Menssage.error, Menssage.password);\n          valid = false;\n        }\n\n        return valid;\n      }\n    }]);\n\n    return TwoStepVerificationComponent;\n  }();\n\n  TwoStepVerificationComponent.ɵfac = function TwoStepVerificationComponent_Factory(t) {\n    return new (t || TwoStepVerificationComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.AlertService), i0.ɵɵdirectiveInject(i5.LocalstoreService));\n  };\n\n  TwoStepVerificationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TwoStepVerificationComponent,\n    selectors: [[\"app-two-step-verification\"]],\n    decls: 2,\n    vars: 0,\n    template: function TwoStepVerificationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"two-step-verification works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  });\n  return TwoStepVerificationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}